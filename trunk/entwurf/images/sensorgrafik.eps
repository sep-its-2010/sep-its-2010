%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.10.0.499 (R2010a). Operating System: Microsoft Windows 7.
%%Title: F:\EigeneDateien\Studium\5.Semester\SEP\Linien- Knotenerkennung\sensorgrafik.eps
%%CreationDate: 10/31/2010  21:48:17
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -332    64   929   777
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -332    64   929   777
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -3984 9324 csm

    0     0 15132  8554 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 15133 8555 rf
6 w
0 7767 9076 0 0 -7767 1967 8081 4 MP
PP
-9076 0 0 7767 9076 0 0 -7767 1967 8081 5 MP stroke
4 w
DO
0 sg
1967 8081 mt 1967  315 L
1967  315 mt 1967  315 L
2874 8081 mt 2874  315 L
2874  315 mt 2874  315 L
3782 8081 mt 3782  315 L
3782  315 mt 3782  315 L
4689 8081 mt 4689  315 L
4689  315 mt 4689  315 L
5597 8081 mt 5597  315 L
5597  315 mt 5597  315 L
6505 8081 mt 6505  315 L
6505  315 mt 6505  315 L
7412 8081 mt 7412  315 L
7412  315 mt 7412  315 L
8320 8081 mt 8320  315 L
8320  315 mt 8320  315 L
9227 8081 mt 9227  315 L
9227  315 mt 9227  315 L
10135 8081 mt 10135  315 L
10135  315 mt 10135  315 L
11043 8081 mt 11043  315 L
11043  315 mt 11043  315 L
1967 8081 mt 11043 8081 L
11043 8081 mt 11043 8081 L
1967 7218 mt 11043 7218 L
11043 7218 mt 11043 7218 L
1967 6355 mt 11043 6355 L
11043 6355 mt 11043 6355 L
1967 5492 mt 11043 5492 L
11043 5492 mt 11043 5492 L
1967 4629 mt 11043 4629 L
11043 4629 mt 11043 4629 L
1967 3766 mt 11043 3766 L
11043 3766 mt 11043 3766 L
1967 2903 mt 11043 2903 L
11043 2903 mt 11043 2903 L
1967 2040 mt 11043 2040 L
11043 2040 mt 11043 2040 L
1967 1177 mt 11043 1177 L
11043 1177 mt 11043 1177 L
1967  315 mt 11043  315 L
11043  315 mt 11043  315 L
SO
6 w
1967  314 mt 11043  314 L
1967 8081 mt 11043 8081 L
11043 8081 mt 11043  314 L
1967 8081 mt 1967  314 L
1967 8081 mt 11043 8081 L
1967 8081 mt 1967  314 L
1967 8081 mt 1967 7990 L
1967  315 mt 1967  405 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1934 8226 mt 
(0) s
2874 8081 mt 2874 7990 L
2874  315 mt 2874  405 L
2808 8226 mt 
(10) s
3782 8081 mt 3782 7990 L
3782  315 mt 3782  405 L
3716 8226 mt 
(20) s
4689 8081 mt 4689 7990 L
4689  315 mt 4689  405 L
4623 8226 mt 
(30) s
5597 8081 mt 5597 7990 L
5597  315 mt 5597  405 L
5531 8226 mt 
(40) s
6505 8081 mt 6505 7990 L
6505  315 mt 6505  405 L
6439 8226 mt 
(50) s
7412 8081 mt 7412 7990 L
7412  315 mt 7412  405 L
7346 8226 mt 
(60) s
8320 8081 mt 8320 7990 L
8320  315 mt 8320  405 L
8254 8226 mt 
(70) s
9227 8081 mt 9227 7990 L
9227  315 mt 9227  405 L
9161 8226 mt 
(80) s
10135 8081 mt 10135 7990 L
10135  315 mt 10135  405 L
10069 8226 mt 
(90) s
11043 8081 mt 11043 7990 L
11043  315 mt 11043  405 L
10943 8226 mt 
(100) s
1967 8081 mt 2057 8081 L
11043 8081 mt 10952 8081 L
1732 8125 mt 
(100) s
1967 7218 mt 2057 7218 L
11043 7218 mt 10952 7218 L
1732 7262 mt 
(200) s
1967 6355 mt 2057 6355 L
11043 6355 mt 10952 6355 L
1732 6399 mt 
(300) s
1967 5492 mt 2057 5492 L
11043 5492 mt 10952 5492 L
1732 5536 mt 
(400) s
1967 4629 mt 2057 4629 L
11043 4629 mt 10952 4629 L
1732 4673 mt 
(500) s
1967 3766 mt 2057 3766 L
11043 3766 mt 10952 3766 L
1732 3810 mt 
(600) s
1967 2903 mt 2057 2903 L
11043 2903 mt 10952 2903 L
1732 2947 mt 
(700) s
1967 2040 mt 2057 2040 L
11043 2040 mt 10952 2040 L
1732 2084 mt 
(800) s
1967 1177 mt 2057 1177 L
11043 1177 mt 10952 1177 L
1732 1221 mt 
(900) s
1967  315 mt 2057  315 L
11043  315 mt 10952  315 L
1666  359 mt 
(1000) s
1967  314 mt 11043  314 L
1967 8081 mt 11043 8081 L
11043 8081 mt 11043  314 L
1967 8081 mt 1967  314 L
gs 1967 315 9077 7767 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
-907 -34 -908 -328 -907 -967 -908 -1786 -908 -1286 -907 -241 -908 -639 -907 -440 
-908 -259 -908 -293 11043 7183 11 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
-907 -638 -908 -967 -907 -880 -908 -863 -908 -751 -907 -155 -908 -449 -907 -258 
-908 -216 -908 -155 11043 7709 11 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
-907 -483 -908 -1579 -907 -1045 -908 -983 -908 -872 -907 -276 -908 -518 -907 -353 
-908 -251 -908 -207 11043 7494 11 MP stroke
gr

c10
0 sg
6160 8369 mt 
(Schwarzwert) s
1584 4538 mt  -90 rotate
(Sensorwerte) s
90 rotate
5623  220 mt 
(Sensordaten der Bodensensoren) s
1950 8124 mt 
( ) s
11027  357 mt 
( ) s
1 sg
0 480 1679 0 0 -480 9305 855 4 MP
PP
-1679 0 0 480 1679 0 0 -480 9305 855 5 MP stroke
4 w
DO
SO
6 w
0 sg
9305  375 mt 10984  375 L
9305  855 mt 10984  855 L
10984  855 mt 10984  375 L
9305  855 mt 9305  375 L
9305  855 mt 10984  855 L
9305  855 mt 9305  375 L
9305  375 mt 10984  375 L
9305  855 mt 10984  855 L
10984  855 mt 10984  375 L
9305  855 mt 9305  375 L
9777  510 mt 
(linker Bodensensor) s
gs 9305 375 1680 481 rc
c8
363 0 9377 467 2 MP stroke
gr

c8
0 sg
9777  658 mt 
(mittlerer Bodensensor) s
gs 9305 375 1680 481 rc
c9
363 0 9377 615 2 MP stroke
gr

c9
0 sg
9777  806 mt 
(rechter Bodensensor) s
gs 9305 375 1680 481 rc
c10
363 0 9377 762 2 MP stroke
gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
